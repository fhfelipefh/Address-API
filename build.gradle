plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.felipe'
sourceCompatibility = '11'
targetCompatibility = '11'

ext {
	swaggerVersion = '3.0.0'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.testng:testng:7.1.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.5'
	implementation("io.springfox:springfox-swagger2:${swaggerVersion}")
	implementation("io.springfox:springfox-boot-starter:${swaggerVersion}")
	implementation("io.springfox:springfox-swagger-ui:${swaggerVersion}")
	implementation("io.springfox:springfox-bean-validators:${swaggerVersion}")
	implementation("io.springfox:springfox-data-rest:${swaggerVersion}")
	implementation 'io.swagger:swagger-annotations:1.6.5'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.5.5'
	runtimeOnly 'com.h2database:h2:1.4.200'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

task ujar(type: Jar) {
	manifest.attributes(['Main-Class': 'com.felipe.address.App'])

	duplicatesStrategy = 'include'

	from sourceSets.main.output

	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
	}
}

task run(type: JavaExec) {
	main = 'com.felipe.address.App'
	classpath = sourceSets.main.runtimeClasspath
}